name: Build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: test-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  run:
    name: Build for ${{ matrix.target.name }}
    runs-on: ${{ matrix.target.build_os }}
    timeout-minutes: 3
    strategy:
      fail-fast: false
      matrix:
        target:
          - name: Windows
            build_os: windows-latest
            artifact_name: UnityAprilTags.dll
          - name: iOS
            build_os: macos-latest
            cmake_args: -G Xcode -DCMAKE_SYSTEM_NAME=iOS -DCMAKE_OSX_DEPLOYMENT_TARGET=16.0
            artifact_name: libUnityAprilTags.a
          - name: macOS
            build_os: macos-latest
            cmake_args: -G Xcode -DCMAKE_OSX_ARCHITECTURES="arm64;x86_64"
            artifact_name: libUnityAprilTags.dylib
          - name: Linux
            build_os: ubuntu-latest
            artifact_name: libUnityAprilTags.so
    steps:
    - uses: actions/checkout@v4
    - name: Build with CMake
      run: |
        cmake -B build ${{ matrix.target.cmake_args }} -DCMAKE_BUILD_TYPE=Release
        cmake --build build
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: lib-${{ matrix.target.name }}
        path: build/${{ matrix.target.artifact_name }}